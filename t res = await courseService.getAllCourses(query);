[1mdiff --cc Backend/models/chatbot.model.js[m
[1mindex 828aeed,a6cb4da..0000000[m
mode 100644,100644..100755[m
[1m--- a/Backend/models/chatbot.model.js[m
[1m+++ b/Backend/models/chatbot.model.js[m
[36m@@@ -18,9 -18,18 +18,24 @@@[m [mconst postWebhook = (req, res) => [m
              let webhook_event = entry.messaging[0];[m
              console.log(webhook_event);[m
  [m
[32m++<<<<<<< HEAD[m
[32m +            // Get the sender PSID[m
[32m +            let sender_psid = webhook_event.sender.id;[m
[32m +            console.log('Sender PSID: ' + sender_psid);[m
[32m++=======[m
[32m+ [m
[32m+             // Get the sender PSID[m
[32m+             let sender_psid = webhook_event.sender.id;[m
[32m+             console.log('Sender PSID: ' + sender_psid);[m
[32m+ [m
[32m+             // Check if the event is a message or postback and[m
[32m+             // pass the event to the appropriate handler function[m
[32m+             if (webhook_event.message) {[m
[32m+                 handleMessage(sender_psid, webhook_event.message);[m
[32m+             } else if (webhook_event.postback) {[m
[32m+                 handlePostback(sender_psid, webhook_event.postback);[m
[32m+             }[m
[32m++>>>>>>> a3a018d9c8fc3690509f4f08c4330a8e237af2c4[m
          });[m
  [m
          // Returns a '200 OK' response to all requests[m
[36m@@@ -54,12 -63,25 +69,34 @@@[m [mconst getWebhook = (req, res) => [m
              // Responds with '403 Forbidden' if verify tokens do not match[m
              res.sendStatus(403);[m
          }[m
[32m++<<<<<<< HEAD[m
[32m++    }[m
[32m++};[m
[32m++[m
[32m++// Handles messages events[m
[32m++function handleMessage(sender_psid, received_message) {[m
[32m++[m
[32m++=======[m
      }[m
  };[m
  [m
  // Handles messages events[m
  function handleMessage(sender_psid, received_message) {[m
  [m
[32m+     let response;[m
[32m+ [m
[32m+     // Check if the message contains text[m
[32m+     if (received_message.text) {[m
[32m+ [m
[32m+         // Create the payload for a basic text message[m
[32m+         response = {[m
[32m+             "text": `You sent the message: "${received_message.text}". Now send me an image!`[m
[32m+         }[m
[32m+     }[m
[32m+ [m
[32m+     // Sends the response message[m
[32m+     callSendAPI(sender_psid, response);[m
[32m++>>>>>>> a3a018d9c8fc3690509f4f08c4330a8e237af2c4[m
  }[m
  [m
  // Handles messaging_postbacks events[m
